name: Build Backup Operator       # Name of workflow
on: [push]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  Tests:                          # Name of job 
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16.5'
      - uses: helm/kind-action@v1.2.0
        with:
          version: 'v0.11.1'
          cluster_name: backup-operator-test
      - run: make test
  Lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16.5'
      - run: make lint
  Build:
    needs: [Tests, Lint]
    # for the if statement see https://github.community/t/trigger-job-on-tag-push-only/18076
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-20.04
    steps:
      # https://docs.github.com/en/actions/guides/publishing-docker-images#publishing-images-to-github-packages
      - uses: actions/checkout@v2
      - uses: docker/login-action@6af3c118c8376c675363897acf1757f7a9be6583
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta                   # Used to pass data into next step
        uses: docker/metadata-action@e5622373a38e60fb6d795a4421e56882f2d7a681
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - uses: docker/build-push-action@7f9d37fa544684fb73bfe4835ed7214c255ce02b
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }} # see id meta in previous step
          labels: ${{ steps.meta.outputs.labels }} # see id meta in previous step
  PublishChart:
    needs: Build # Note this key can be value or list
    # for the if statement see: https://github.community/t/trigger-job-on-tag-push-only/18076
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: git config --global user.email "deploy-bot@kubism.github.com"
      - run: git config --global user.name "Deploy Bot"
      - run: pip3 install --no-cache-dir -r ci/dev-requirements.txt
      - run: ./ci/publish.sh
        env:
          CHART_PUSH_KEY: "${{ secrets.CHART_PUSH_KEY }}"
